import org.moddinginquisition.web.gradle.DepResolver

import java.nio.file.Files

plugins {
    id 'application'
}

configurations {
    implementation.extendsFrom(groovyDeps)
}

archivesBaseName = 'web-frontend'

dependencies {
    implementation libs.gson
    implementation libs.javalin
    implementation libs.logback

    implementation libs.vue
    implementation libs.vue.loader

    implementation libs.github.api
}

processResources {
    from(rootProject.file('favicon.png')) {
        into 'public'
    }

    exclude 'dist'
    from(file('src/main/resources/dist')) {
        into 'public/dist'
    }

    exclude 'vue/components'
    from(file('src/main/resources/vue/components')) {
        into 'public/dist/components'
    }

    doLast {
        final var depsOut = project.file("$buildDir/resources/main/dependencies.txt")
        Files.writeString(depsOut.toPath(), DepResolver.resolveDeps(
                configurations.implementation, configurations.groovyDeps
        ))
    }
}

run {
    workingDir rootProject.file('run/frontend')
    jvmArgs '-Dorg.moddinginquisition.web.inDev=true'
    setMainClassName 'org.moddinginquisition.web.frontend.WebsiteFrontend'
}

Runnable configuration = () -> {
    dependencies {
        implementation project(':common').sourceSets.dsl.output
        implementation project(':common').sourceSets.main.output
        implementation project(':common').sourceSets.extension.output
    }

    jar {
        from project(':common').sourceSets.dsl.output
        from project(':common').sourceSets.main.output
        from project(':common').sourceSets.extension.output
        manifest.attributes([
                'Main-Class': application.getMainClassName()
        ])
    }
}
afterEvaluate {
    configuration.run()
}